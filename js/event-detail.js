// ‚úÖ L·∫•y danh s√°ch s·ª± ki·ªán d√πng chung
const events = eventList;

// ‚úÖ L·∫•y ID t·ª´ URL
const urlParams = new URLSearchParams(window.location.search);
const eventId = parseInt(urlParams.get("id")); // ID l√† s·ªë

// ‚úÖ H√†m ƒë·ªãnh d·∫°ng th·ªùi gian
function formatDateTime(datetimeStr) {
  const d = new Date(datetimeStr);
  return d.toLocaleString("vi-VN", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit"
  });
}

// ‚úÖ T√¨m s·ª± ki·ªán theo ID
const event = events.find(e => e.id === eventId);

if (!event) {
  document.getElementById("event-title").textContent = "Kh√¥ng t√¨m th·∫•y s·ª± ki·ªán.";
} else {
  // ‚úÖ Hi·ªÉn th·ªã th√¥ng tin s·ª± ki·ªán
  document.getElementById("event-img").src = event.image;
  document.getElementById("event-title").textContent = event.title;
  document.getElementById("event-start").textContent = formatDateTime(event.start);
  document.getElementById("event-end").textContent = formatDateTime(event.end);
  document.getElementById("event-location").textContent = event.location;
  document.getElementById("event-price").textContent = parseInt(event.price).toLocaleString("vi-VN") + "‚Ç´";
  document.getElementById("event-description").textContent = event.description;
  document.getElementById("event-seats").textContent = `${event.bookedSeats}/${event.totalSeats}`;
  document.getElementById("register-link").href = `register-event.html?id=${event.id}`;

  // ‚úÖ X√°c ƒë·ªãnh tr·∫°ng th√°i s·ª± ki·ªán
  const now = new Date();
  const startTime = new Date(event.start);
  const endTime = new Date(event.end);

let timeStatus = "";
let seatStatus = "";

// X√°c ƒë·ªãnh tr·∫°ng th√°i th·ªùi gian
if (now < startTime) {
  timeStatus = "S·∫Øp di·ªÖn ra";
} else if (now >= startTime && now <= endTime) {
  timeStatus = "ƒêang di·ªÖn ra";
} else {
  timeStatus = "ƒê√£ k·∫øt th√∫c";
}

// Ch·ªâ ki·ªÉm tra t√¨nh tr·∫°ng ch·ªó n·∫øu s·ª± ki·ªán ch∆∞a k·∫øt th√∫c
if (now < endTime) {
  seatStatus = (event.bookedSeats >= event.totalSeats) ? "H·∫øt ch·ªó" : "C√≤n ch·ªó";
} else {
  seatStatus = ""; // S·ª± ki·ªán k·∫øt th√∫c th√¨ kh√¥ng quan t√¢m ch·ªó
}

// K·∫øt h·ª£p n·∫øu mu·ªën:
let status = timeStatus;
if (seatStatus) status += ` - ${seatStatus}`;

// V√≠ d·ª• output:
// "S·∫Øp di·ªÖn ra - C√≤n ch·ªó"
// "ƒêang di·ªÖn ra - H·∫øt ch·ªó"
// "ƒê√£ k·∫øt th√∫c"


  document.getElementById("event-status").textContent = status;

  // ‚úÖ PH·∫¶N ƒê√ÅNH GI√Å ‚Äì hi·ªÉn th·ªã n·∫øu s·ª± ki·ªán ƒë√£ k·∫øt th√∫c
  if (now > endTime) {
    const reviewSection = document.getElementById("review-section");
    const reviewList = document.getElementById("review-list");
    const reviewForm = document.getElementById("review-form");

    reviewSection.style.display = "block";

    const storageKey = "event-reviews-" + event.id;
    let reviews = JSON.parse(localStorage.getItem(storageKey)) || [];

    // N·∫øu ch∆∞a c√≥ ƒë√°nh gi√° n√†o th√¨ th√™m ƒë√°nh gi√° m·∫´u (1 l·∫ßn duy nh·∫•t)
    if (reviews.length === 0) {
      reviews = [
        { name: "Nguy·ªÖn VƒÉn A", stars: "5", content: "S·ª± ki·ªán r·∫•t chuy√™n nghi·ªáp, m√¨nh h·ªçc ƒë∆∞·ª£c nhi·ªÅu ƒëi·ªÅu." },
        { name: "Tr·∫ßn Th·ªã B", stars: "4", content: "T·ªï ch·ª©c t·ªët, nh∆∞ng ph·∫ßn √¢m thanh ch∆∞a ho√†n h·∫£o l·∫Øm." },
        { name: "L√™ VƒÉn C", stars: "5", content: "Th·∫≠t s·ª± ƒë√°ng gi√° ti·ªÅn. R·∫•t ·∫•n t∆∞·ª£ng!" }
      ];
      localStorage.setItem(storageKey, JSON.stringify(reviews));
    }

    // ‚úÖ Hi·ªÉn th·ªã t·∫•t c·∫£ ƒë√°nh gi√°
    renderReviews(reviews);

    // ‚úÖ Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ƒë∆∞·ª£c ph√©p g·ª≠i ƒë√°nh gi√° kh√¥ng
    const currentUser = JSON.parse(localStorage.getItem("currentUser")) || {};
    const joinedEvents = currentUser.suKienDaDangKy || [];

    const canReview = currentUser.username && Array.isArray(joinedEvents) && joinedEvents.includes(eventId);

    if (canReview) {
      // ‚úÖ Cho ph√©p g·ª≠i ƒë√°nh gi√°
      reviewForm.style.display = "block";

      reviewForm.addEventListener("submit", function (e) {
        e.preventDefault();

        const stars = document.getElementById("review-stars").value;
        const content = document.getElementById("review-content").value.trim();
        const name = currentUser.fullname || currentUser.username || "·∫®n danh";

        if (!stars || !content) {
          alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ƒë√°nh gi√°.");
          return;
        }

        const newReview = { name, stars, content };
        reviews.push(newReview);
        localStorage.setItem(storageKey, JSON.stringify(reviews));
        renderReviews(reviews);
        reviewForm.reset();
      });
    } else {
      // ‚ùå Kh√¥ng ƒë∆∞·ª£c ph√©p ‚Üí ·∫®n form + hi·ªán th√¥ng b√°o
      reviewForm.style.display = "none";
      const warning = document.createElement("p");
      warning.textContent = "üîí Ch·ªâ ng∆∞·ªùi ƒë√£ ƒëƒÉng nh·∫≠p v√† tham gia s·ª± ki·ªán m·ªõi ƒë∆∞·ª£c ƒë√°nh gi√°.";
      warning.style.color = "gray";
      reviewForm.parentNode.insertBefore(warning, reviewForm);
    }

    // ‚úÖ H√†m render c√°c ƒë√°nh gi√°
    function renderReviews(reviews) {
      reviewList.innerHTML = "";
      reviews.forEach((r) => {
        const item = document.createElement("div");
        item.classList.add("review-item");
        item.innerHTML = `
          <p><strong>${r.name}</strong> - ${r.stars} ‚≠ê</p>
          <p>${r.content}</p>
        `;
        reviewList.appendChild(item);
      });
    }
  }
}
